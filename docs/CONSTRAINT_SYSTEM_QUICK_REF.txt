╔══════════════════════════════════════════════════════════════════════╗
║         FLEXIBLE CONSTRAINT SYSTEM - QUICK REFERENCE                 ║
╚══════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────┐
│ VIEW CONFIGURATION                                                   │
└──────────────────────────────────────────────────────────────────────┘
  $ python scripts/show_config.py       # Both hard and soft
  $ python scripts/show_soft_config.py  # Soft only (legacy)


┌──────────────────────────────────────────────────────────────────────┐
│ ENABLE/DISABLE CONSTRAINTS                                           │
└──────────────────────────────────────────────────────────────────────┘
  Edit: config/constraints.py
  
  HARD_CONSTRAINTS_CONFIG = {
      "constraint_name": {"enabled": True/False, "weight": float},
  }
  
  SOFT_CONSTRAINTS_CONFIG = {
      "constraint_name": {"enabled": True/False, "weight": float},
  }


┌──────────────────────────────────────────────────────────────────────┐
│ AVAILABLE HARD CONSTRAINTS (Feasibility - Must be zero)             │
└──────────────────────────────────────────────────────────────────────┘
  1. no_group_overlap             - No student double-booking
  2. no_instructor_conflict       - No instructor double-booking
  3. instructor_not_qualified     - Instructor has qualifications
  4. room_type_mismatch           - Room meets course requirements
  5. availability_violations      - Respects availability windows
  6. incomplete_or_extra_sessions - Correct quanta per course-group


┌──────────────────────────────────────────────────────────────────────┐
│ AVAILABLE SOFT CONSTRAINTS (Quality - Lower is better)              │
└──────────────────────────────────────────────────────────────────────┘
  1. group_gaps_penalty              - Compact student schedules
  2. instructor_gaps_penalty         - Compact instructor schedules
  3. group_midday_break_violation    - Ensure lunch breaks
  4. course_split_penalty            - Avoid fragmented sessions
  5. early_or_late_session_penalty   - Reasonable hours only


┌──────────────────────────────────────────────────────────────────────┐
│ WEIGHT GUIDELINES                                                    │
└──────────────────────────────────────────────────────────────────────┘
  Hard Constraints:
    1.0  = Standard (default - all violations equally bad)
    2.0+ = Prioritize eliminating this violation type
  
  Soft Constraints:
    0.5  = Low priority
    1.0  = Normal priority (default)
    3.0  = Important
    5.0  = Very important
    10.0 = Critical


┌──────────────────────────────────────────────────────────────────────┐
│ EXAMPLE: ALL HARD CONSTRAINTS ENABLED (Default)                     │
└──────────────────────────────────────────────────────────────────────┘
  HARD_CONSTRAINTS_CONFIG = {
      "no_group_overlap": {"enabled": True, "weight": 1.0},
      "no_instructor_conflict": {"enabled": True, "weight": 1.0},
      "instructor_not_qualified": {"enabled": True, "weight": 1.0},
      "room_type_mismatch": {"enabled": True, "weight": 1.0},
      "availability_violations": {"enabled": True, "weight": 1.0},
      "incomplete_or_extra_sessions": {"enabled": True, "weight": 1.0},
  }


┌──────────────────────────────────────────────────────────────────────┐
│ EXAMPLE: PRIORITIZE SPECIFIC HARD CONSTRAINT                        │
└──────────────────────────────────────────────────────────────────────┘
  # Make instructor conflicts 5x more important than other violations
  HARD_CONSTRAINTS_CONFIG = {
      "no_group_overlap": {"enabled": True, "weight": 1.0},
      "no_instructor_conflict": {"enabled": True, "weight": 5.0},  # Priority!
      # ... rest at 1.0
  }


┌──────────────────────────────────────────────────────────────────────┐
│ EXAMPLE: ENABLE ALL SOFT CONSTRAINTS WITH PRIORITIES                │
└──────────────────────────────────────────────────────────────────────┘
  SOFT_CONSTRAINTS_CONFIG = {
      "group_gaps_penalty": {"enabled": True, "weight": 5.0},
      "instructor_gaps_penalty": {"enabled": True, "weight": 3.0},
      "group_midday_break_violation": {"enabled": True, "weight": 2.0},
      "course_split_penalty": {"enabled": True, "weight": 1.0},
      "early_or_late_session_penalty": {"enabled": True, "weight": 1.0},
  }


┌──────────────────────────────────────────────────────────────────────┐
│ ADD NEW HARD CONSTRAINT (4 STEPS)                                   │
└──────────────────────────────────────────────────────────────────────┘
  1. Define in src/constraints/hard.py:
     def my_constraint(sessions, courses=None) -> int:
         return violations

  2. Register in get_all_hard_constraints():
     return {"my_constraint": my_constraint, ...}

  3. Configure in config/constraints.py:
     "my_constraint": {"enabled": True, "weight": 1.0}

  4. If needs courses param, update evaluators:
     Add to list in fitness.py and detailed_fitness.py


┌──────────────────────────────────────────────────────────────────────┐
│ ADD NEW SOFT CONSTRAINT (3 STEPS)                                   │
└──────────────────────────────────────────────────────────────────────┘
  1. Define in src/constraints/soft.py:
     def my_penalty(sessions: List[CourseSession]) -> int:
         return penalty

  2. Register in get_all_soft_constraints():
     return {"my_penalty": my_penalty, ...}

  3. Configure in config/constraints.py:
     "my_penalty": {"enabled": True, "weight": 1.0}


┌──────────────────────────────────────────────────────────────────────┐
│ TEST THE SYSTEM                                                      │
└──────────────────────────────────────────────────────────────────────┘
  $ python test/test_constraint_registry.py         # Both hard & soft
  $ python test/test_soft_constraints_registry.py   # Soft only (legacy)


┌──────────────────────────────────────────────────────────────────────┐
│ DOCUMENTATION                                                        │
└──────────────────────────────────────────────────────────────────────┘
  docs/flexible-constraints-system.md    - Complete reference
  docs/flexible-soft-constraints.md      - Soft constraints only
  docs/soft-constraint-examples.md       - Config examples
  docs/FLEXIBLE_CONSTRAINTS_SUMMARY.md   - Implementation summary

╔══════════════════════════════════════════════════════════════════════╗
║  No code changes needed - just edit config/constraints.py!          ║
╚══════════════════════════════════════════════════════════════════════╝
